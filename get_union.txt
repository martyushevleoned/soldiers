create or replace function get_union(integer)
returns text
language plpgsql
as
$$
DECLARE
	sol_count integer;
	cur_union text;
	cur_union_id int;
	cur_commander_id int;
BEGIN
	select count(Военнослужащий."ID_военнослужащего") into sol_count from Военнослужащий
	where Военнослужащий."ID_военнослужащего" = $1;

	if sol_count = 0 then
		return 'Военнослужащего нет в базе';
	end if;

	-- находим тип подразделения
	select Подразделение."Тип_подразделения" into cur_union from Военнослужащий
	inner join Подразделение on Военнослужащий."ID_подразделения" = Подразделение."ID_подразделения"
	where Военнослужащий."ID_военнослужащего" = $1;

	--проверка для выхода из рекурсии
	if cur_union = 'военный округ' then
		select Подразделение."Название_подразделения" into cur_union from Военнослужащий
		inner join Подразделение on Военнослужащий."ID_подразделения" = Подразделение."ID_подразделения"
		where Военнослужащий."ID_военнослужащего" = $1;
		return cur_union;
	end if;

	-- находим название подразделения
	select Подразделение."Название_подразделения" into cur_union from Военнослужащий
	inner join Подразделение on Военнослужащий."ID_подразделения" = Подразделение."ID_подразделения"
	where Военнослужащий."ID_военнослужащего" = $1;

	--находим id большего подразделения
	select Подразделение."ID_большего_подразделения" into cur_union_id from Военнослужащий
	inner join Подразделение on Военнослужащий."ID_подразделения" = Подразделение."ID_подразделения"
	where Военнослужащий."ID_военнослужащего" = $1;

	--находим id командира большего подразделения
	select Подразделение."ID_командира_подразделения" from Подразделение into cur_commander_id
	where Подразделение."ID_подразделения" = cur_union_id;

	--передаём id командира большего подразделения добавляя к нему название текущего подразжделения
	return cur_union || '  ' || get_union(cur_commander_id);
END;
$$;